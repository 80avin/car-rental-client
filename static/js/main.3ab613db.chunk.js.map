{"version":3,"sources":["components/App.js","store/reducers/userReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["connect","state","initialState","userReducer","action","type","reducers","combineReducers","user","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"2NAmBeA,eARS,SAACC,GAAD,MAAY,KAIT,GAIZD,EAhBI,WACjB,OACE,4C,OCHEE,EAAe,GAWNC,EAPK,WAAiC,IAAhCF,EAA+B,uDAAzBC,EAAcE,EAAW,uCAG9C,OAFGA,EAAOC,KAEHJ,GCFEK,EAJEC,YAAgB,CAC/BC,KAAKL,I,QCMQM,EALDC,YACZJ,EACAK,YAAgBC,MCClBC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.3ab613db.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nexport const App = () => {\n  return (\n    <div>\n      main app\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// TODO import action types\n\nconst initialState = {\n\n};\n\nconst userReducer = (state=initialState, action) => {\n  switch(action.type){\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","import {combineReducers} from 'redux';\nimport userReducer from \"./userReducer\";\n\nconst reducers = combineReducers({\n  user:userReducer,\n});\n\nexport default reducers;","import {createStore, applyMiddleware} from 'redux';\nimport reducers from './reducers'\nimport thunk from 'redux-thunk';\n\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk),\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}